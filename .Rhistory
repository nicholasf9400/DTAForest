setwd("~/DTAForest")
setwd('C:/Users/NicholasFitzhugh/OneDrive - Behandlingsraadet/Scripts/DTA forest plot')
#Test data
require(readxl)
d <- read_excel('Systolisk hjertesvigt.xlsx')
#Function requirements
require(ggplot2)
require(epiR)
require(stringr)
#Compute sens and spec plus CI
sesp_temp <- matrix(NA, ncol=6, nrow = nrow(d))
for (i in 1:nrow(d)) {
temp <- epi.tests(c(d$TP[i], d$FP[i], d$FN[i], d$TN[i]))
temp <- temp[[1]][c(3,4),]
sesp_temp[i,] <- as.numeric(cbind(temp[1,2:4], temp[2,2:4]))
}
colnames(sesp_temp) <- c('sens', 'sensLL', 'sensUL',
'spec', 'specLL', 'specUL')
d <- cbind(d, sesp_temp)
forest.sens <- ggplot(data=d, aes(x=Reference, y=sens, ymin = sensLL, ymax = sensUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=5) + geom_linerange() +
coord_flip() + ylab('Sensitivtet (95% KI)') + ylim(0,1)
forest.spec <- ggplot(data=d, aes(x=Reference, y=spec, ymin = specLL, ymax = specUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=5) + geom_linerange() +
coord_flip() + ylab('Specificitet (95% KI)') + ylim(0,1)
table_base <- ggplot(d, aes(y=Reference)) +
ylab(NULL) + xlab("  ") +
theme(plot.title = element_text(hjust = 0.5, size=12),
axis.text.x = element_text(color="white", hjust = -3, size = 25), ## This is used to help with alignment
axis.line = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = rev(Reference), x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab2 <-  table_base +
geom_text(aes(y = Tærskel, x = 1, label = Tærskel)) + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
View(d)
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = Reference, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab2 <-  table_base +
geom_text(aes(y = Tærskel, x = 1, label = Tærskel)) + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
d$Tærskel
tab2 <-  table_base +
geom_text(aes(y = Tærskel, x = 1, label = Tærskel), stat = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = Tærskel, x = 1, label = Tærskel), stat = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), stat = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), stat = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = rev(Reference), x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), stat = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel)) + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), size = 3.5) + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), size = 3.5, hadjust = 0) + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), size = 3.5, hjust = 0) + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab3 <-  table_base +
geom_text(aes(y = `Type HHUSD`, x = 1, label = `Type HHUSD`)) + ## decimal places
ggtitle("Type HHUSD") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), size = 3.5, hjust = 0,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = rev(Tærskel), x = 1, label = Tærskel), size = 3.5,
position = 'identity')# + ## decimal places
tab2
rev(Tærskel)
tab2 <-  table_base +
geom_text(data = d, aes(y = 1:nrow(Tærskel), x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = n_row, x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
n_row <- nrow(d)
tab2 <-  table_base +
geom_text(data = d, aes(y = n_row, x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
d$ind <- 1:nrow(d)
tab2 <-  table_base +
geom_text(data = d, aes(y = n_row, x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab2 <-  table_base +
geom_text(data = d, aes(y = ind, x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
d <- cbind(d, sesp_temp)
d$ind <- 1:nrow(d)
forest.sens <- ggplot(data=d, aes(x=Reference, y=sens, ymin = sensLL, ymax = sensUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=5) + geom_linerange() +
coord_flip() + ylab('Sensitivtet (95% KI)') + ylim(0,1)
forest.spec <- ggplot(data=d, aes(x=Reference, y=spec, ymin = specLL, ymax = specUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=5) + geom_linerange() +
coord_flip() + ylab('Specificitet (95% KI)') + ylim(0,1)
table_base <- ggplot(d, aes(y=Reference)) +
ylab(NULL) + xlab("  ") +
theme(plot.title = element_text(hjust = 0.5, size=12),
axis.text.x = element_text(color="white", hjust = -3, size = 25), ## This is used to help with alignment
axis.line = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
rlang::last_error()
rlang::last_trace()
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = rev(Reference), x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
#Test data
require(readxl)
d <- read_excel('Systolisk hjertesvigt.xlsx')
#Function requirements
require(ggplot2)
require(epiR)
require(stringr)
#Compute sens and spec plus CI
sesp_temp <- matrix(NA, ncol=6, nrow = nrow(d))
for (i in 1:nrow(d)) {
temp <- epi.tests(c(d$TP[i], d$FP[i], d$FN[i], d$TN[i]))
temp <- temp[[1]][c(3,4),]
sesp_temp[i,] <- as.numeric(cbind(temp[1,2:4], temp[2,2:4]))
}
colnames(sesp_temp) <- c('sens', 'sensLL', 'sensUL',
'spec', 'specLL', 'specUL')
d <- cbind(d, sesp_temp)
d$ind <- 1:nrow(d)
forest.sens <- ggplot(data=d, aes(x=Reference, y=sens, ymin = sensLL, ymax = sensUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=5) + geom_linerange() +
coord_flip() + ylab('Sensitivtet (95% KI)') + ylim(0,1)
forest.spec <- ggplot(data=d, aes(x=Reference, y=spec, ymin = specLL, ymax = specUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=5) + geom_linerange() +
coord_flip() + ylab('Specificitet (95% KI)') + ylim(0,1)
table_base <- ggplot(d, aes(y=Reference)) +
ylab(NULL) + xlab("  ") +
theme(plot.title = element_text(hjust = 0.5, size=12),
axis.text.x = element_text(color="white", hjust = -3, size = 25), ## This is used to help with alignment
axis.line = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = rev(Reference), x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab2 <-  table_base +
geom_text(data = d, aes(y = ind, x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab3 <-  table_base +
geom_text(aes(y = ind, x = 1, label = `Type HHUSD`)) + ## decimal places
ggtitle("Type HHUSD") + theme(plot.title=element_text(face = 'bold'))
tab3
grid.arrange
install.packages("gridExtra")
#Function requirements
require(ggplot2)
require(epiR)
require(stringr)
require(gridExtra)
grid.arrange(tab1, tab2, tab3, forest.sens, forest.spec)
lay <-  matrix(c(1,1,1,1,1,1,1,1,1,1,2,3,3), nrow = 1)
View(lay)
lay <-  matrix(c(1,1,1,1,1,1,1,1,1,1,2,3,3), nrow = 1)
grid.arrange(tab1, tab2, tab3, forest.sens, forest.spec, layout_matrix = lay)
grid.arrange(tab1, forest.sens, forest.spec, layout_matrix = lay)
marrangeGrob(tab1, tab2, tab3, forest.sens, forest.spec, nrow = 1)
marrangeGrob(tab1, tab2, tab3, forest.sens, forest.spec, nrow = 1, ncol = 5)
grid.arrange(tab1, forest.sens, forest.spec, nrow=1, ncol=5)
grid.arrange(tab1, tab2, tab3, forest.sens, forest.spec, nrow=1, ncol=5)
forest.sens <- ggplot(data=d, aes(x=Reference, y=sens, ymin = sensLL, ymax = sensUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=3) + geom_linerange() +
coord_flip() + ylab('Sensitivtet (95% KI)') + ylim(0,1)
forest.spec <- ggplot(data=d, aes(x=Reference, y=spec, ymin = specLL, ymax = specUL)) + theme_bw() +
theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y=element_blank(),
axis.line = element_blank(), panel.border = element_blank(), panel.grid.minor = element_blank(), panel.grid.major = element_blank())+
geom_point(color='blue', shape = 'square', size=3) + geom_linerange() +
coord_flip() + ylab('Specificitet (95% KI)') + ylim(0,1)
table_base <- ggplot(d, aes(y=Reference)) +
ylab(NULL) + xlab("  ") +
theme(plot.title = element_text(hjust = 0.5, size=12),
axis.text.x = element_text(color="white", hjust = -3, size = 25), ## This is used to help with alignment
axis.line = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab2 <-  table_base +
geom_text(data = d, aes(y = ind, x = 1, label = Tærskel), size = 3.5,
position = 'identity') + ## decimal places
ggtitle("Tærskel for positivt fund") + theme(plot.title=element_text(face = 'bold'))
tab2
tab3 <-  table_base +
geom_text(aes(y = ind, x = 1, label = `Type HHUSD`)) + ## decimal places
ggtitle("Type HHUSD") + theme(plot.title=element_text(face = 'bold'))
tab3
lay <-  matrix(c(1,1,1,1,1,1,1,1,1,1,2,3,3), nrow = 1)
grid.arrange(tab1, tab2, tab3, forest.sens, forest.spec, nrow=1, ncol=5)
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference), hjust=1) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference), hjust=0) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference)) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference), hjust=0) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
tab1 <- table_base +
labs(title = "Reference") +
geom_text(aes(y = ind, x = 1, label = Reference), hjust=1) + ## decimal places
ggtitle("Studie") + theme(plot.title=element_text(face = 'bold'))
tab1
